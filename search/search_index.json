{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"00mainPage/","title":"Welcome","text":"","tags":["tag1","tag2"]},{"location":"00mainPage/#ella-greetis-egr314-individual-report","title":"Ella Greetis EGR314 Individual Report","text":"<p>Link back to STEMteresting main page </p> <p>Hello! My name is Ella Greetis and I'm a Robotics Engineering student. I'm in charge of the Bidirectional Internet Communication for team STEMteresting, where I'll be receiving the speed of the motor in RPM and the planet whose gravity this RPM represents, and will display that to an external user. </p> <p>Link to Block Diagram: Bidirectional Internet Communication Link to Component Selection Link to Schematic Link to Bill of Materials Link to API </p>","tags":["tag1","tag2"]},{"location":"01BlockDiagram/","title":"Block Diagram","text":"<p> This block diagram for Team STEMteresting's Bidirectional Internet Communication is up-to-date as of January 31, 2025, and will continue to be updated throughout the semester. </p>"},{"location":"02componentSelection/","title":"Component Selection","text":""},{"location":"02componentSelection/#voltage-regulator","title":"Voltage Regulator","text":"Solution Pros Cons  LM2575-3.3WU-TR  $1.75/ea  digikey * Equivalent to regulator used in class, so more familiar and easier to use than other options  * Inexpensive * Less experience gained  ADP2370ACPZ-3.3-R7  $6.14/ea  digikey * Exposed pads would be a new and enriching soldering challenge * Expensive  * Least current  TPS5403DR  $1.68/ea  digikey * Least expensive option  * Most current * Unfamiliar"},{"location":"02componentSelection/#selection","title":"Selection","text":"<p>I chose the LM2575 because it's familiar from the Switching Power Supply lab. It's only a few cents more expensive than the TPS5403DR, and provides up to 1 Amp of current, which is far more than enough. </p>"},{"location":"02componentSelection/#microchip","title":"Microchip","text":""},{"location":"02componentSelection/#requirements","title":"Requirements","text":"<p>I will use an ESP32 microcontroller for this project because my subsystem requires the use of a wifi module. </p>"},{"location":"02componentSelection/#esp32","title":"ESP32","text":"Info Answer Model ESP32-S3-WROOM-1-N4 Datasheet link Vendor Link Link Unit Cost $5.06 Maximum Current 500 mA Supply Voltage 3.0-3.6V"},{"location":"02componentSelection/#pinout","title":"Pinout","text":""},{"location":"02componentSelection/#pin-allocation","title":"Pin Allocation","text":"Pin number Name Use 1 GND Ground 2 3v3 Power In 3 EN reset button &amp; RC circuit to stabilize input power 4 IO4 Debugging LED 5 IO5 Debugging LED 6 IO6 Debugging Pushbutton 7 IO7 Debugging Header 8 IO15 Debugging Header 9 IO16 Debugging Header 10 IO17 Debugging Header 11 IO18 Debugging Header 12 IO8 Debugging Header 13 IO19 USB_D- 14 IO20 USB_D+ 15 IO3 Debugging Header 16 IO46 Debugging Header 17 IO9 Debugging Header 18 IO10 Debugging Header 19 IO11 Debugging Header 20 IO12 Debugging Header 21 IO13 Debugging Header 22 IO14 Debugging Header 23 IO21 Debugging Header 24 IO47 Debugging Header 25 IO48 Debugging Header 26 IO45 Debugging Header 27 IO0 Debugging Header 28 IO35 Debugging Header 29 IO36 Debugging Header 30 IO37 Debugging Header 31 IO38 Debugging Header 32 IO39 Debugging Header 33 IO40 Debugging Header 34 IO41 Debugging Header 35 IO42 Debugging Header 36 RXD0 Receiving Data from Upstream 37 TXD0 Transmitting Data Downstream 38 IO2 Debugging Header 39 IO1 Debugging Header 40 GND Ground"},{"location":"02componentSelection/#power-budget","title":"Power Budget","text":"<p>This page is up-to-date as of February 28, 2025 and will continue to be updated throughout the semester. </p>"},{"location":"03schematic/","title":"Schematic","text":"<p>download schematic .pdf download schematic .zip </p> <p>This page is up-to-date as of March 05, 2025 and will continue to be updated throughout the semester. </p>"},{"location":"04BOM/","title":"Bill of Materials","text":""},{"location":"04BOM/#for-pcb","title":"For PCB:","text":"Component Part name Quantity Spares Digikey link ESP32 ESP32-S3-WROOM-1-N4 1 2 digikey Switching Voltage Regulator LM2575-3.3WUTR 1 2 digikey Violet LEDs APTR3216-VFX 3 9 digikey Fuse 0154.630DR 1 2 digikey DC Barrel Jack RASM722BKZ 1 2 digikey Debugging Switch 436331045822 1 2 digikey USB Programmer USB3131-30-0230-A 1 2 digikey  Provided in class Jumpers QPC02SXGN-RC 3 17 digikey 1x2 Male Headers n/a 3 6 n/a 2x15 Male Headers n/a 1 1 n/a 2x4 Female Headers 702460801 2 4 provided in class 220 uH Inductor NR10050T221M 1 2 digikey 0.1 uF Capacitor KGM21NR71E104KT 4 8 digikey 1 uF Capacitor CL21B105KBFNNNE 1 2 digikey 22 uF Capacitor CL21A226MAYNNNE 1 2 digikey 100 uF Capacitor GRM31CR61A107MEA8L 1 2 digikey 330 uF Capacitor GRM32ER60G337ME05L 1 2 digikey 10K Ohm Resistor RC1206FR-0710KL 2 8 digikey 220 Ohm Resistor CRGCQ0805F220R 4 8 digikey Diodes SD0805S020S1R0 6 6 digikey"},{"location":"05API/","title":"API","text":""},{"location":"05API/#message-type-6-motor-speed","title":"Message Type 6 - Motor Speed","text":"data type variable name smallest number recognized largest number recognized example of valid data Byte 1 uint8_t motorSpeed 0 150 130"},{"location":"05API/#message-type-3-motor-on","title":"Message Type 3 - Motor On?","text":"data type variable name smallest number recognized largest number recognized example of valid data Byte 1 uint8_t motorON 0 1 1"},{"location":"05API/#messge-type-4-motor-off","title":"Messge Type 4 - Motor Off?","text":"data type variable name smallest number recognized largest number recognized example of valid data Byte 1 uint8_t motorOFF 0 1 0"},{"location":"98todos/","title":"Website to-do's","text":""},{"location":"98todos/#higher-priority","title":"higher priority:","text":"<ul> <li>[x] Component Selection assignment</li> <li>[x] Schematic design assignment</li> <li>[ ] BOM assignment</li> </ul>"},{"location":"98todos/#lower-priority","title":"lower priority:","text":"<ul> <li>[x] put tabs at top of page in order</li> <li>[ ] fix links in schematic page</li> <li>[ ] fix landing page</li> <li>[ ] fix links to not go back to template repo</li> <li>[x] figure out color editing</li> </ul>"},{"location":"98todos/#schematic-changes-before-going-to-pcb","title":"Schematic changes before going to PCB","text":"<ul> <li>[ ] switch to micro-USB-B instead of USB-A</li> <li>[ ] use jumpers to switch between power supplies? or does fuse make that not necessary</li> <li>[ ] add debugging pushbutton</li> <li>[ ] use pull-up resistor with pushbutton</li> <li>[ ] </li> </ul>"},{"location":"99charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}